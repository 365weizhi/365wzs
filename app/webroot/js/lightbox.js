// Generated by CoffeeScript 1.4.0
(function() {
  var App, _ref, _ref1,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  App = (_ref = window.App) != null ? _ref : {};

  App.Views = (_ref1 = App.Views) != null ? _ref1 : {};

  App.Views.Lightbox = (function() {
    var Lightbox;
    Lightbox = (function(_super) {

      __extends(Lightbox, _super);

      function Lightbox() {
        return Lightbox.__super__.constructor.apply(this, arguments);
      }

      Lightbox.prototype.el = '#lightbox-wrapper';

      Lightbox.prototype.events = {
        'click': 'hide',
        'click #lightbox': 'stopPropagation'
      };

      Lightbox.prototype.initialize = function() {
        return this.$content = this.$el.find('#lightbox');
      };

      Lightbox.prototype.show = function($widget) {
        this.setWidget($widget);
        $('body').addClass('ban-scroll');
        return this.$el.fadeIn();
      };

      Lightbox.prototype.hide = function() {
        this.$el.fadeOut();
        return $('body').removeClass('ban-scroll');
      };

      Lightbox.prototype.stopPropagation = function(e) {
        return e.stopPropagation();
      };

      Lightbox.prototype.setWidget = function($widget) {
        var height, width;
        this.$content.empty();
        width = $(window).width();
        height = $(window).height();
        this.$content.append($widget);
        return this.$content.css({
          width: $widget.attr('width'),
          marginTop: '15%'
        });
      };

      return Lightbox;

    })(Backbone.View);
    return new Lightbox;
  })();

}).call(this);
